Missing Function level Access Control

Official Definition: Most web applications verify function level access rights before making that functionality visible in the UI. However, applications need to perform the same access control checks on the server when each function is accessed. If requests are not verified, attackers will be able to forge requests in order to access functionality without proper authorization. 

Simple Definition: Someone confused UX with security OR You forgot to lock a page again.

Hacker definition: Find an admin endpoint/url that isn't secured, just hidden (EG secured by obscurity). Hit it without bothering to authenticate. Profit.

Incident: ?

Demo: Exploit a "hidden" link that doesnt authenticate. Perhaps an undocumented CRUD method an an API

Fix: ?

Notes: Very similar to 4. Distinction is simple: 4 is about detailed access control (access entity 4 but not 5), 7 is about functions that arent secured (dont let them hit /delete/*). Longer explanation: 4 is talking about users with permission for some subset of an object (EG, edit users 1-4 but not 5 or even user 5 but no one else) being allowed to change an Identifier and gain access to those other instance of the same resource. Here, they typically are unauthenticated or dont have permission for this action (EG, user can post comments but shouldnt be able to edit any users).